<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jeno&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jeno5980515.github.io/"/>
  <updated>2017-09-07T03:29:52.000Z</updated>
  <id>http://jeno5980515.github.io/</id>
  
  <author>
    <name>Jeno</name>
    <email>jeno5980515@yahoo.com.tw</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[LeetCode] 670 - Maximum Swap</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/670%20-%20Maximum%20Swap/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/670 - Maximum Swap/</id>
    <published>2017-09-07T03:26:19.000Z</published>
    <updated>2017-09-07T03:29:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>給定一個數字，輸出交換任兩數字後最大的值。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>貪心。</p>
<p>從位數最高的數字開始換，若欲更換的數字相同則更換位數最低的。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;number&#125; num</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> maximumSwap = <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> arr = (num + <span class="string">''</span>).split(<span class="string">''</span>);</div><div class="line">  <span class="keyword">for</span> ( <span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; arr.length ; i ++ )&#123;</div><div class="line">    <span class="keyword">let</span> maxIndex = i, maxNum = <span class="number">-1</span> ;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">let</span> j = i + <span class="number">1</span> ; j &lt; arr.length ; j ++ )&#123;</div><div class="line">      <span class="keyword">if</span> (arr[maxIndex] &lt; arr[j] || ( maxIndex !== i &amp;&amp; arr[maxIndex] === arr[j] ) )&#123;</div><div class="line">        maxIndex = j;</div><div class="line">        maxNum = arr[j];</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> ( maxIndex !== i )&#123;</div><div class="line">      <span class="keyword">let</span> temp = arr[i];</div><div class="line">      arr[i] = arr[maxIndex];</div><div class="line">      arr[maxIndex] = temp;</div><div class="line">      <span class="keyword">return</span> <span class="built_in">parseInt</span>(arr.join(<span class="string">''</span>));</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> num;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;給定一個數字，輸出交換任兩數字後最大的值。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="670" scheme="http://jeno5980515.github.io/tags/670/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 654 - Maximum Binary Tree</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/654%20-%20Maximum%20Binary%20Tree/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/654 - Maximum Binary Tree/</id>
    <published>2017-09-07T03:23:21.000Z</published>
    <updated>2017-09-07T03:25:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>建造最大二元樹。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>照題目描述模擬即可。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;number[]&#125; nums</div><div class="line"> * @return &#123;TreeNode&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> constructMaximumBinaryTree = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</div><div class="line">  </div><div class="line">  <span class="keyword">const</span> build = <span class="function">(<span class="params">left, right</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> ( left &gt; right ) <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">  </div><div class="line">    <span class="keyword">let</span> max = <span class="number">-1</span>, maxIndex = left;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">let</span> i = left; i &lt;= right ; i ++ )&#123;</div><div class="line">      <span class="keyword">if</span> ( nums[i] &gt; max )&#123;</div><div class="line">        max = nums[i];</div><div class="line">        maxIndex = i;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">const</span> node = <span class="keyword">new</span> TreeNode(nums[maxIndex]);</div><div class="line">    node.left = build(left, maxIndex<span class="number">-1</span>);</div><div class="line">    node.right = build(maxIndex+<span class="number">1</span>, right);</div><div class="line">    <span class="keyword">return</span> node;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> build(<span class="number">0</span>, nums.length - <span class="number">1</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;建造最大二元樹。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="654" scheme="http://jeno5980515.github.io/tags/654/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 647 - Palindromic Substrings</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/647%20-%20Palindromic%20Substrings/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/647 - Palindromic Substrings/</id>
    <published>2017-09-07T03:18:30.000Z</published>
    <updated>2017-09-07T03:22:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>輸出字串中回文子字串的個數。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>DP。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dp(i, j) 代表從 i 開始至 j 的子字串是否為回文</div><div class="line">dp(i, j) = true if s(i) = s(j) &amp; dp(i+1, j-1) = true</div><div class="line">	 = false else</div></pre></td></tr></table></figure>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;string&#125; s</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> countSubstrings = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> count = <span class="number">0</span>;</div><div class="line">  <span class="keyword">let</span> bool = <span class="built_in">Array</span>.apply(<span class="literal">null</span>, <span class="built_in">Array</span>(s.length+<span class="number">1</span>)).map(<span class="function"><span class="params">row</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Array</span>(s.length+<span class="number">1</span>).fill(<span class="literal">true</span>));</div><div class="line">  <span class="keyword">for</span> ( <span class="keyword">var</span> i = s.length - <span class="number">1</span> ; i &gt;= <span class="number">0</span> ; i -- )&#123;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">var</span> j = i + <span class="number">1</span> ; j &lt; s.length ; j ++ )&#123;</div><div class="line">      <span class="keyword">if</span> ( s[i] === s[j] &amp;&amp; bool[i+<span class="number">1</span>][j<span class="number">-1</span>] === <span class="literal">true</span> )&#123;</div><div class="line">        bool[i+<span class="number">1</span>][j<span class="number">-1</span>] = <span class="literal">true</span>;</div><div class="line">        count ++;</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">        bool[i][j] = <span class="literal">false</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> count + s.length;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;輸出字串中回文子字串的個數。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="647" scheme="http://jeno5980515.github.io/tags/647/"/>
    
      <category term="Palindromic" scheme="http://jeno5980515.github.io/tags/Palindromic/"/>
    
      <category term="String" scheme="http://jeno5980515.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 560 - Subarray Sum Equals K</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/560%20-%20Subarray%20Sum%20Equals%20K/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/560 - Subarray Sum Equals K/</id>
    <published>2017-09-07T02:29:23.000Z</published>
    <updated>2017-09-07T03:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>找出陣列中子陣列和為 K 的次數。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>假設 sum(i) 為第一個元素至第 i 個元素的總和。</p>
<p>若 sum(j) + k = sum(i)，則代表從 j+1 ~ i 的和也就是 sum(i) - sum(j) 為 k 。  </p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;number[]&#125; nums</div><div class="line"> * @param &#123;number&#125; k</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> subarraySum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, k</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> map = &#123; <span class="number">0</span> : <span class="number">1</span> &#125;;</div><div class="line">  <span class="keyword">let</span> sum = <span class="number">0</span>;</div><div class="line">  <span class="keyword">let</span> count = <span class="number">0</span>;</div><div class="line">  nums.forEach(<span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</div><div class="line">    sum += num;</div><div class="line">    <span class="keyword">if</span> ( map[sum-k] ) &#123;</div><div class="line">      count += map[sum-k];</div><div class="line">    &#125;</div><div class="line">    map[sum] = map[sum] === <span class="literal">undefined</span> ? <span class="number">1</span> : map[sum] + <span class="number">1</span>; </div><div class="line">  &#125;)</div><div class="line">  <span class="keyword">return</span> count;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;找出陣列中子陣列和為 K 的次數。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="515" scheme="http://jeno5980515.github.io/tags/515/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 515 - Find Largest Value in Each Tree Row</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/515%20-%20Find%20Largest%20Value%20in%20Each%20Tree%20Row/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/515 - Find Largest Value in Each Tree Row/</id>
    <published>2017-09-07T02:27:45.000Z</published>
    <updated>2017-09-07T02:29:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>找出樹中每一層最大的元素。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>BFS。 </p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @return &#123;number[]&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> largestValues = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( !root ) <span class="keyword">return</span> [];</div><div class="line">  <span class="keyword">let</span> queue = [root];</div><div class="line">  <span class="keyword">let</span> result = [];</div><div class="line">  <span class="keyword">while</span>( queue.length !== <span class="number">0</span> )&#123;</div><div class="line">    <span class="keyword">let</span> length = queue.length;</div><div class="line">    <span class="keyword">let</span> max = queue[<span class="number">0</span>].val;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i ++ )&#123;</div><div class="line">      <span class="keyword">let</span> node = queue.shift();</div><div class="line">      <span class="keyword">if</span> ( node.val &gt; max ) max = node.val;</div><div class="line">      <span class="keyword">if</span> ( node.left ) queue.push(node.left);</div><div class="line">      <span class="keyword">if</span> ( node.right ) queue.push(node.right);</div><div class="line">    &#125;</div><div class="line">    result.push(max);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;找出樹中每一層最大的元素。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="515" scheme="http://jeno5980515.github.io/tags/515/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 513 - Find Bottom Left Tree Value</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/513%20-%20Find%20Bottom%20Left%20Tree%20Value/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/513 - Find Bottom Left Tree Value/</id>
    <published>2017-09-07T02:23:29.000Z</published>
    <updated>2017-09-07T02:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>找出樹中最下層且最左邊的元素。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>BFS。 </p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> findBottomLeftValue = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( !root ) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">  <span class="keyword">let</span> queue = [root];</div><div class="line">  <span class="keyword">let</span> result = <span class="number">0</span>;</div><div class="line">  <span class="keyword">while</span>( queue.length !== <span class="number">0</span> )&#123;</div><div class="line">    <span class="keyword">let</span> length = queue.length;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i ++ )&#123;</div><div class="line">      <span class="keyword">let</span> node = queue.shift();</div><div class="line">      <span class="keyword">if</span> ( i === <span class="number">0</span> ) result = node.val;</div><div class="line">      <span class="keyword">if</span> ( node.left ) queue.push(node.left);</div><div class="line">      <span class="keyword">if</span> ( node.right ) queue.push(node.right);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;找出樹中最下層且最左邊的元素。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="513" scheme="http://jeno5980515.github.io/tags/513/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 508 - Most Frequent Subtree Sum</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/508%20-%20Most%20Frequent%20Subtree%20Sum/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/508 - Most Frequent Subtree Sum/</id>
    <published>2017-09-07T02:18:53.000Z</published>
    <updated>2017-09-07T02:23:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>找出所有子樹和頻率最高的值。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>DFS ，並利用 Map 紀錄所有和的次數。 </p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @return &#123;number[]&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> findFrequentTreeSum = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> map = &#123;&#125;;</div><div class="line">  </div><div class="line">  <span class="keyword">const</span> dfs = <span class="function">(<span class="params">node</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> ( node === <span class="literal">null</span> ) <span class="keyword">return</span> <span class="number">0</span> ;</div><div class="line">    <span class="keyword">let</span> sum = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span> ( node.left )&#123;</div><div class="line">      sum += dfs(node.left); </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> ( node.right )&#123;</div><div class="line">      sum += dfs(node.right);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> result = sum + node.val;</div><div class="line">    map[result] = map[result] === <span class="literal">undefined</span> ? <span class="number">1</span> : map[result] + <span class="number">1</span> ;</div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">  &#125;</div><div class="line">  dfs(root);</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Object</span>.keys(map)</div><div class="line">    .map(<span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">return</span> &#123; num, <span class="attr">amount</span> : map[num] &#125; ; </div><div class="line">    &#125;)</div><div class="line">    .sort(<span class="function">(<span class="params">e1, e2</span>) =&gt;</span> e2.amount - e1.amount )</div><div class="line">    .filter(<span class="function">(<span class="params">el, index, arr</span>) =&gt;</span> el.amount === arr[<span class="number">0</span>].amount )</div><div class="line">    .map(<span class="function"><span class="params">el</span> =&gt;</span> <span class="built_in">parseInt</span>(el.num))</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;找出所有子樹和頻率最高的值。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="508" scheme="http://jeno5980515.github.io/tags/508/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 451 - Sort Characters By Frequency</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/451%20-%20Sort%20Characters%20By%20Frequency/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/451 - Sort Characters By Frequency/</id>
    <published>2017-09-07T02:16:03.000Z</published>
    <updated>2017-09-07T02:18:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>改變輸入的字串為出現頻率高至低，若頻率相同則照字典排序。</p>
<a id="more"></a>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;string&#125; s</div><div class="line"> * @return &#123;string&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> frequencySort = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> map = &#123;&#125;;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.length; i ++ )&#123;</div><div class="line">    map[s[i]] = map[s[i]] === <span class="literal">undefined</span> ? <span class="number">1</span> : map[s[i]] + <span class="number">1</span> ;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Object</span>.keys(map)</div><div class="line">    .map(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</div><div class="line">      <span class="keyword">return</span> &#123; <span class="attr">key</span> : key , <span class="attr">amount</span> : map[key] &#125;;</div><div class="line">    &#125;)</div><div class="line">    .sort(<span class="function">(<span class="params">e1, e2</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> ( e1.amount !== e2.amount ) <span class="keyword">return</span> e2.amount - e1.amount;</div><div class="line">      <span class="keyword">else</span> <span class="keyword">return</span> e1.key &lt; e2.key ? <span class="number">-1</span> : <span class="number">1</span>;</div><div class="line">    &#125;)</div><div class="line">    .reduce(<span class="function">(<span class="params">cal, el</span>) =&gt;</span> cal + <span class="built_in">Array</span>(el.amount+<span class="number">1</span>).join(el.key), <span class="string">""</span>)</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;改變輸入的字串為出現頻率高至低，若頻率相同則照字典排序。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="451" scheme="http://jeno5980515.github.io/tags/451/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 442 - Find All Duplicates in an Array</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/442%20-%20Find%20All%20Duplicates%20in%20an%20Array/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/442 - Find All Duplicates in an Array/</id>
    <published>2017-09-07T02:08:05.000Z</published>
    <updated>2017-09-07T02:15:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>一陣列符合 1 ≤ a[i] ≤ n 且元素皆為一個或兩個，找出所有含有兩個的元素。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>遍歷所有元素並將遇到的元素 index-1 設為相反數，因此若遇到該元素已經為負數的情形則代表重複。 </p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;number[]&#125; nums</div><div class="line"> * @return &#123;number[]&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> findDuplicates = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> nums.reduce(<span class="function">(<span class="params">result, num</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> number = <span class="built_in">Math</span>.abs(num);</div><div class="line">    nums[number - <span class="number">1</span>] &lt; <span class="number">0</span> ? result.push(number) : nums[number - <span class="number">1</span>] *= <span class="number">-1</span> ;</div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">  &#125;, []);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;一陣列符合 1 ≤ a[i] ≤ n 且元素皆為一個或兩個，找出所有含有兩個的元素。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="442" scheme="http://jeno5980515.github.io/tags/442/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 287 - Find the Duplicate Number</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/287%20-%20Find%20the%20Duplicate%20Number/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/287 - Find the Duplicate Number/</id>
    <published>2017-09-07T01:44:22.000Z</published>
    <updated>2017-09-07T02:07:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>一個 n+1 長度的陣列中含有元素 1~n ，找出重複的那個元素。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>利用快慢指針的做法，元素皆指向該索引，找到環的起點即可。</p>
<p>例如：14423<br>1 -&gt; 4 -&gt; 3 -&gt; 2 -&gt; 4 -&gt; 3 -&gt; 2 -&gt; … 找到重複數 4 即是環的起點 </p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;number[]&#125; nums</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> findDuplicate = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</div><div class="line">    </div><div class="line">  <span class="keyword">let</span> slow = nums[<span class="number">0</span>];</div><div class="line">  <span class="keyword">let</span> fast = nums[nums[<span class="number">0</span>]];</div><div class="line">  <span class="keyword">while</span> ( fast !== slow )&#123;</div><div class="line">    fast = nums[nums[fast]];</div><div class="line">    slow = nums[slow];</div><div class="line">    <span class="keyword">if</span> ( fast === slow )&#123;</div><div class="line">      slow = <span class="number">0</span>;</div><div class="line">      <span class="keyword">while</span> ( slow !== fast )&#123;</div><div class="line">        slow = nums[slow];</div><div class="line">        fast = nums[fast];</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> slow;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> slow;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;一個 n+1 長度的陣列中含有元素 1~n ，找出重複的那個元素。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="287" scheme="http://jeno5980515.github.io/tags/287/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 230 - Kth Smallest Element in a BST</title>
    <link href="http://jeno5980515.github.io/2017/09/07/Online%20Judge/LeetCode/230%20-%20Kth%20Smallest%20Element%20in%20a%20BST/"/>
    <id>http://jeno5980515.github.io/2017/09/07/Online Judge/LeetCode/230 - Kth Smallest Element in a BST/</id>
    <published>2017-09-07T01:40:43.000Z</published>
    <updated>2017-09-07T01:44:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>在 <code>Binary Search Tree</code> 中找到第 K 小的元素。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p><code>Inorder Traversal</code> 後輸出第 K 個元素即可。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @param &#123;number&#125; k</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> kthSmallest = <span class="function"><span class="keyword">function</span>(<span class="params">root, k</span>) </span>&#123;</div><div class="line">    </div><div class="line">  <span class="keyword">let</span> stack = [];</div><div class="line">  <span class="keyword">let</span> result = [];</div><div class="line">  <span class="keyword">let</span> node = root;</div><div class="line">  </div><div class="line">  <span class="keyword">while</span>( stack.length !== <span class="number">0</span> || node !== <span class="literal">null</span> )&#123;</div><div class="line">    <span class="keyword">while</span> ( node !== <span class="literal">null</span> )&#123;</div><div class="line">      stack.push(node);</div><div class="line">      node = node.left;</div><div class="line">    &#125;</div><div class="line">    node = stack.pop();</div><div class="line">    result.push(node.val);</div><div class="line">    node = node.right;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> result[k<span class="number">-1</span>];</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;在 &lt;code&gt;Binary Search Tree&lt;/code&gt; 中找到第 K 小的元素。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="BST" scheme="http://jeno5980515.github.io/tags/BST/"/>
    
      <category term="230" scheme="http://jeno5980515.github.io/tags/230/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 144 - Binary Tree Preorder Traversal</title>
    <link href="http://jeno5980515.github.io/2017/09/06/Online%20Judge/LeetCode/144%20-%20Binary%20Tree%20Preorder%20Traversal/"/>
    <id>http://jeno5980515.github.io/2017/09/06/Online Judge/LeetCode/144 - Binary Tree Preorder Traversal/</id>
    <published>2017-09-06T07:13:21.000Z</published>
    <updated>2017-09-07T01:40:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>使用非遞迴的方式 <code>Preorder Traversal</code> 二元樹。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>Preorder 順序是根、左子樹、右子樹，利用 <code>stack</code> 來完成 Traversal 。</p>
<p>與 <code>Inorder Traversal</code> 解法類似，向左子樹尋找的路上不斷紀錄根節點，且將右子樹都先放到 stack 中</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @return &#123;number[]&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> preorderTraversal = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( !root ) <span class="keyword">return</span> [];</div><div class="line">  </div><div class="line">  <span class="keyword">let</span> stack = [];</div><div class="line">  <span class="keyword">let</span> result = [];</div><div class="line">  <span class="keyword">let</span> node = root;</div><div class="line">  </div><div class="line">  <span class="keyword">while</span>( stack.length !== <span class="number">0</span> || node !== <span class="literal">null</span> )&#123;</div><div class="line">    <span class="keyword">if</span> ( !node )&#123;</div><div class="line">      node = stack.pop();</div><div class="line">    &#125;</div><div class="line">    result.push(node.val);</div><div class="line">    <span class="keyword">if</span> ( node.right )&#123;</div><div class="line">      stack.push(node.right);</div><div class="line">    &#125;</div><div class="line">    node = node.left;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;使用非遞迴的方式 &lt;code&gt;Preorder Traversal&lt;/code&gt; 二元樹。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="144" scheme="http://jeno5980515.github.io/tags/144/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 142 - Linked List Cycle II</title>
    <link href="http://jeno5980515.github.io/2017/09/06/Online%20Judge/LeetCode/142%20-%20Linked%20List%20Cycle%20II/"/>
    <id>http://jeno5980515.github.io/2017/09/06/Online Judge/LeetCode/142 - Linked List Cycle II/</id>
    <published>2017-09-06T05:41:47.000Z</published>
    <updated>2017-09-06T07:09:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>在沒有額外空間且不修改的情況下判斷 Linked List 是否有環，並且回傳該環的起點。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>先同第一題一樣先使用兩個指標，一個一次一步，另一個則一次兩步直到會合。</p>
<p>假設<br>從 Linked List 的起點到環的起點為 A<br>從 環的起點到相遇處為 B<br>從 相遇處到環的起點為 C </p>
<p>則可以得出下列式子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">2(A + B + n(B+C)) = A + B + m(B+C) , 其中 n, m 個別代表慢指針及快指針所繞的圈數</div><div class="line">=&gt; 2A + 2B + 2n(B+C) = A + B + m(B+C)</div><div class="line">=&gt; A + B = (B+C)(m-2n)</div></pre></td></tr></table></figure></p>
<p>當題目生成時 A, B+C 已經固定，找尋是否有存在 n, m, B 使等式成立<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">n = 0 時， m = A, 而 B = A(B+C) - A</div><div class="line">=&gt; A + A(B+C) - A = A(B+C)  </div><div class="line">=&gt; A(B+C) = A(B+C)</div></pre></td></tr></table></figure></p>
<p>因此<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">A + B = (B+C)(m-2n)</div><div class="line">=&gt; A + B + C = (B+C)(m-2n) + C</div><div class="line">=&gt; A = (B+C)(m-2n-1) + C </div><div class="line">=&gt; A = (B+C)(A-1) + C</div></pre></td></tr></table></figure></p>
<p>因此從 Linked List 起點開始的指針必定會和從相會處開始的指針交於環的起點。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * function ListNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.next = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;ListNode&#125; head</div><div class="line"> * @return &#123;ListNode&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> detectCycle = <span class="function"><span class="keyword">function</span>(<span class="params">head</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( head === <span class="literal">null</span> ) <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">  </div><div class="line">  <span class="keyword">let</span> fast = head;</div><div class="line">  <span class="keyword">let</span> slow = head;</div><div class="line">  <span class="keyword">while</span> ( fast.next &amp;&amp; fast.next.next )&#123;</div><div class="line">    fast = fast.next.next;</div><div class="line">    slow = slow.next;</div><div class="line">    <span class="keyword">if</span> ( fast === slow )&#123;</div><div class="line">      slow = head;</div><div class="line">      <span class="keyword">while</span> ( slow !== fast )&#123;</div><div class="line">        slow = slow.next;</div><div class="line">        fast = fast.next;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> slow;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;在沒有額外空間且不修改的情況下判斷 Linked List 是否有環，並且回傳該環的起點。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="142" scheme="http://jeno5980515.github.io/tags/142/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 141 - Linked List Cycle</title>
    <link href="http://jeno5980515.github.io/2017/09/06/Online%20Judge/LeetCode/141%20-%20Linked%20List%20Cycle/"/>
    <id>http://jeno5980515.github.io/2017/09/06/Online Judge/LeetCode/141 - Linked List Cycle/</id>
    <published>2017-09-06T05:36:43.000Z</published>
    <updated>2017-09-06T05:41:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>在沒有額外空間的情況下判斷 Linked List 是否有環。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>使用兩個指針遍歷這個 Linked List 。一個一次走兩步，另一個則一次走一步，若有環則必定會合同一個點。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * function ListNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.next = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;ListNode&#125; head</div><div class="line"> * @return &#123;boolean&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> hasCycle = <span class="function"><span class="keyword">function</span>(<span class="params">head</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( head === <span class="literal">null</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">  </div><div class="line">  <span class="keyword">let</span> fast = head;</div><div class="line">  <span class="keyword">let</span> slow = head;</div><div class="line">  <span class="keyword">while</span> ( fast.next &amp;&amp; fast.next.next )&#123;</div><div class="line">    fast = fast.next.next;</div><div class="line">    slow = slow.next;</div><div class="line">    <span class="keyword">if</span> ( fast === slow )&#123;</div><div class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;在沒有額外空間的情況下判斷 Linked List 是否有環。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="141" scheme="http://jeno5980515.github.io/tags/141/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 102 - Binary Tree Level Order Traversal</title>
    <link href="http://jeno5980515.github.io/2017/09/06/Online%20Judge/LeetCode/102%20-%20Binary%20Tree%20Level%20Order%20Traversal/"/>
    <id>http://jeno5980515.github.io/2017/09/06/Online Judge/LeetCode/102 - Binary Tree Level Order Traversal/</id>
    <published>2017-09-06T04:30:05.000Z</published>
    <updated>2017-09-06T05:33:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p><code>Level Order Traversal</code> 二元樹。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>BFS。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @return &#123;number[][]&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> levelOrder = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( !root ) <span class="keyword">return</span> [];</div><div class="line">  <span class="keyword">let</span> queue = [root];</div><div class="line">  <span class="keyword">let</span> levels = [];</div><div class="line">  <span class="keyword">while</span>( queue.length !== <span class="number">0</span> )&#123;</div><div class="line">    <span class="keyword">let</span> length = queue.length;</div><div class="line">    levels.push([]);</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i ++ )&#123;</div><div class="line">      <span class="keyword">let</span> node = queue.shift();</div><div class="line">      levels[levels.length<span class="number">-1</span>].push(node.val);</div><div class="line">      <span class="keyword">if</span> ( node.left ) queue.push(node.left);</div><div class="line">      <span class="keyword">if</span> ( node.right ) queue.push(node.right);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> levels;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Level Order Traversal&lt;/code&gt; 二元樹。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="98" scheme="http://jeno5980515.github.io/tags/98/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 98 - Validate Binary Search Tree</title>
    <link href="http://jeno5980515.github.io/2017/09/06/Online%20Judge/LeetCode/98%20-%20Validate%20Binary%20Search%20Tree/"/>
    <id>http://jeno5980515.github.io/2017/09/06/Online Judge/LeetCode/98 - Validate Binary Search Tree/</id>
    <published>2017-09-06T04:19:53.000Z</published>
    <updated>2017-09-06T04:29:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>判斷是否為二元搜尋樹。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>二元搜尋樹對於任一節點來說，左子樹必小於且右子樹必大於該節點。</p>
<p>利用 <code>Inorder Traversal</code> 的特性「左子樹-&gt;根-&gt;右子樹」，判斷該結果是否為升序排列即可。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @return &#123;boolean&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> isValidBST = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</div><div class="line">    </div><div class="line">  <span class="keyword">let</span> stack = [];</div><div class="line">  <span class="keyword">let</span> result = [];</div><div class="line">  <span class="keyword">let</span> node = root;</div><div class="line"></div><div class="line">  <span class="keyword">while</span>( stack.length !== <span class="number">0</span> || node !== <span class="literal">null</span> )&#123;</div><div class="line">    <span class="keyword">while</span> ( node !== <span class="literal">null</span> )&#123;</div><div class="line">      stack.push(node);</div><div class="line">      node = node.left;</div><div class="line">    &#125;</div><div class="line">    node = stack.pop();</div><div class="line">    result.push(node.val);</div><div class="line">    node = node.right;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">for</span> ( <span class="keyword">let</span> i = <span class="number">1</span> ; i &lt; result.length ; i ++ )&#123;</div><div class="line">    <span class="keyword">if</span> ( result[i] &lt;= result[i<span class="number">-1</span>] )&#123;</div><div class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;判斷是否為二元搜尋樹。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="98" scheme="http://jeno5980515.github.io/tags/98/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 64 - Minimum Path Sum</title>
    <link href="http://jeno5980515.github.io/2017/09/06/Online%20Judge/LeetCode/64%20-%20Minimum%20Path%20Sum/"/>
    <id>http://jeno5980515.github.io/2017/09/06/Online Judge/LeetCode/64 - Minimum Path Sum/</id>
    <published>2017-09-06T03:09:44.000Z</published>
    <updated>2017-09-06T03:19:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>給一個 m x n 填滿非負數的矩陣，從左上方開始往右下走且每一步只能往右或往下走，求最小數字總和。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>DP。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dp(i,j) = dp[i][j<span class="number">-1</span>] + grid[i][j] <span class="keyword">if</span> i = <span class="number">0</span></div><div class="line">	= dp[i<span class="number">-1</span>][j] + grid[i][j] <span class="keyword">if</span> j = <span class="number">0</span></div><div class="line">	= min(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]) + grid[i][j] <span class="keyword">else</span></div></pre></td></tr></table></figure></p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;number[][]&#125; grid</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> minPathSum = <span class="function"><span class="keyword">function</span>(<span class="params">grid</span>) </span>&#123;</div><div class="line">  <span class="keyword">const</span> m = grid.length, n = grid[<span class="number">0</span>].length;</div><div class="line">  <span class="keyword">const</span> dp = <span class="built_in">Array</span>.apply(<span class="literal">null</span>, <span class="built_in">Array</span>(m+<span class="number">1</span>)).map(<span class="function"><span class="params">row</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Array</span>(n+<span class="number">1</span>).fill(<span class="number">0</span>));</div><div class="line">  <span class="keyword">for</span> ( <span class="keyword">let</span> i = <span class="number">1</span> ; i &lt; dp.length ; i ++ )&#123;</div><div class="line">    <span class="keyword">for</span> ( <span class="keyword">let</span> j = <span class="number">1</span> ; j &lt; dp[i].length ; j ++ )&#123;</div><div class="line">      <span class="keyword">if</span> ( i === <span class="number">1</span> ) dp[i][j] = dp[i][j<span class="number">-1</span>] + grid[i<span class="number">-1</span>][j<span class="number">-1</span>];</div><div class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ( j === <span class="number">1</span> ) dp[i][j] = dp[i<span class="number">-1</span>][j] + grid[i<span class="number">-1</span>][j<span class="number">-1</span>];</div><div class="line">      <span class="keyword">else</span> dp[i][j] = <span class="built_in">Math</span>.min(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>]) + grid[i<span class="number">-1</span>][j<span class="number">-1</span>]; </div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> dp[m][n];</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;給一個 m x n 填滿非負數的矩陣，從左上方開始往右下走且每一步只能往右或往下走，求最小數字總和。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="dp" scheme="http://jeno5980515.github.io/tags/dp/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="64" scheme="http://jeno5980515.github.io/tags/64/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 94 - Binary Tree Inorder Traversal</title>
    <link href="http://jeno5980515.github.io/2017/09/06/Online%20Judge/LeetCode/94%20-%20Binary%20Tree%20Inorder%20Traversal/"/>
    <id>http://jeno5980515.github.io/2017/09/06/Online Judge/LeetCode/94 - Binary Tree Inorder Traversal/</id>
    <published>2017-09-06T03:09:44.000Z</published>
    <updated>2017-09-06T04:19:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>使用非遞迴的方式 <code>Inorder Traversal</code> 二元樹。</p>
<a id="more"></a>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>Inorder 順序是左子樹、根、右子樹，利用 <code>stack</code> 來完成 Traversal 。</p>
<p>往左子樹下看並同時將一路上的根放入 stack，當碰到 null 時代表該節點左子樹已到底，pop 出該節點（此時視為根）且紀錄，因此接著進入該節點右子樹重複步驟上述步驟，直到該節點右子樹遍歷完，代表該節點的根之左子樹遍歷完畢，再依此類推。</p>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * function TreeNode(val) &#123;</div><div class="line"> *     this.val = val;</div><div class="line"> *     this.left = this.right = null;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;TreeNode&#125; root</div><div class="line"> * @return &#123;number[]&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> inorderTraversal = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( !root ) <span class="keyword">return</span> [];</div><div class="line">  </div><div class="line">  <span class="keyword">let</span> stack = [];</div><div class="line">  <span class="keyword">let</span> result = [];</div><div class="line">  <span class="keyword">let</span> node = root;</div><div class="line">  </div><div class="line">  <span class="keyword">while</span>( stack.length !== <span class="number">0</span> || node !== <span class="literal">null</span> )&#123;</div><div class="line">    <span class="keyword">while</span> ( node !== <span class="literal">null</span> )&#123;</div><div class="line">      stack.push(node);</div><div class="line">      node = node.left;</div><div class="line">    &#125;</div><div class="line">    node = stack.pop();</div><div class="line">    result.push(node.val);</div><div class="line">    node = node.right;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h2&gt;&lt;p&gt;使用非遞迴的方式 &lt;code&gt;Inorder Traversal&lt;/code&gt; 二元樹。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://jeno5980515.github.io/tags/Tree/"/>
    
      <category term="94" scheme="http://jeno5980515.github.io/tags/94/"/>
    
  </entry>
  
  <entry>
    <title>[LeetCode] 59 - Spiral Matrix II</title>
    <link href="http://jeno5980515.github.io/2017/09/03/Online%20Judge/LeetCode/59%20-%20Spiral%20Matrix%20II/"/>
    <id>http://jeno5980515.github.io/2017/09/03/Online Judge/LeetCode/59 - Spiral Matrix II/</id>
    <published>2017-09-03T06:50:20.000Z</published>
    <updated>2017-09-03T06:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h1><p>同 <code>54 - Spiral Matrix</code> ，模擬繞圈遍歷矩陣即可。</p>
<a id="more"></a>
<h1 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * @param &#123;number&#125; n</div><div class="line"> * @return &#123;number[][]&#125;</div><div class="line"> */</div><div class="line"><span class="keyword">var</span> generateMatrix = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> ( n === <span class="number">0</span> ) <span class="keyword">return</span> [];</div><div class="line">  <span class="keyword">let</span> matrix = <span class="built_in">Array</span>.apply(<span class="literal">null</span>, <span class="built_in">Array</span>(n)).map(<span class="function"><span class="params">row</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Array</span>(n));</div><div class="line">  <span class="keyword">const</span> dirs = [<span class="string">'e'</span>, <span class="string">'s'</span>, <span class="string">'w'</span>, <span class="string">'n'</span>, <span class="string">'e'</span>];</div><div class="line">  <span class="keyword">const</span> dxs = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>];</div><div class="line">  <span class="keyword">const</span> dys = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>];</div><div class="line">    </div><div class="line">  <span class="keyword">const</span> checkValid = <span class="function">(<span class="params">x, y, dir</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">switch</span>(dir)&#123;</div><div class="line">      <span class="keyword">case</span> <span class="string">'e'</span>: <span class="keyword">return</span> y &lt; matrix[x].length - <span class="number">1</span> &amp;&amp; !matrix[x][y+<span class="number">1</span>];</div><div class="line">      <span class="keyword">case</span> <span class="string">'s'</span>: <span class="keyword">return</span> x &lt; matrix.length - <span class="number">1</span> &amp;&amp; !matrix[x+<span class="number">1</span>][y];</div><div class="line">      <span class="keyword">case</span> <span class="string">'w'</span>: <span class="keyword">return</span> y &gt;= <span class="number">1</span> &amp;&amp; !matrix[x][y<span class="number">-1</span>];</div><div class="line">      <span class="keyword">case</span> <span class="string">'n'</span>: <span class="keyword">return</span> x &gt;= <span class="number">1</span> &amp;&amp; !matrix[x<span class="number">-1</span>][y];</div><div class="line">    &#125;</div><div class="line">  &#125;  </div><div class="line">    </div><div class="line">  <span class="keyword">const</span> loop = <span class="function">(<span class="params">x ,y, dir, number</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span> ( matrix[x][y] ) <span class="keyword">return</span> ;</div><div class="line">    </div><div class="line">    matrix[x][y] = number;</div><div class="line">    <span class="keyword">let</span> dirIndex = dirs.indexOf(dir);</div><div class="line">    </div><div class="line">    <span class="keyword">if</span>( !checkValid(x, y, dir) )&#123;</div><div class="line">      dirIndex ++ ;</div><div class="line">      <span class="keyword">if</span> ( checkValid(x, y, dirs[dirIndex]) )&#123;</div><div class="line">        loop(x + dxs[dirIndex], y + dys[dirIndex], dirs[dirIndex], number + <span class="number">1</span>);</div><div class="line">      &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      loop(x + dxs[dirIndex], y + dys[dirIndex], dir, number + <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  loop(<span class="number">0</span>, <span class="number">0</span>, dirs[<span class="number">0</span>], <span class="number">1</span>);</div><div class="line">  <span class="keyword">return</span> matrix;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h1&gt;&lt;p&gt;同 &lt;code&gt;54 - Spiral Matrix&lt;/code&gt; ，模擬繞圈遍歷矩陣即可。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/categories/Online-Judge/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://jeno5980515.github.io/tags/LeetCode/"/>
    
      <category term="59" scheme="http://jeno5980515.github.io/tags/59/"/>
    
  </entry>
  
  <entry>
    <title>[Codewars] 4 kyu - Sum Strings as Numbers</title>
    <link href="http://jeno5980515.github.io/2017/08/31/Online%20Judge/Codewars/4%20kyu%20-%20Sum%20Strings%20as%20Numbers/"/>
    <id>http://jeno5980515.github.io/2017/08/31/Online Judge/Codewars/4 kyu - Sum Strings as Numbers/</id>
    <published>2017-08-31T04:00:03.000Z</published>
    <updated>2017-08-31T04:03:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h1><p>大數相加。</p>
<a id="more"></a>
<h1 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumStrings</span>(<span class="params">a,b</span>) </span>&#123; </div><div class="line">  <span class="keyword">if</span> ( b.length &gt; a.length )&#123;</div><div class="line">    <span class="keyword">var</span> temp = a ;</div><div class="line">    a = b ;</div><div class="line">    b = temp ;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">while</span> ( b.length &lt; a.length )&#123;</div><div class="line">    b = <span class="string">'0'</span> + b ;</div><div class="line">  &#125;</div><div class="line">  a = a.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>);</div><div class="line">  b = b.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>);</div><div class="line">  <span class="keyword">var</span> c = <span class="string">''</span> , i = <span class="number">0</span> ;</div><div class="line">  <span class="keyword">var</span> carry = <span class="number">0</span> ;</div><div class="line">  <span class="keyword">for</span> ( <span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; a.length ; i ++ ) &#123;</div><div class="line">    <span class="keyword">var</span> result = <span class="built_in">parseInt</span>(a[i]) + <span class="built_in">parseInt</span>(b[i]) + carry ;</div><div class="line">    carry = <span class="number">0</span> ;</div><div class="line">    <span class="keyword">if</span> ( result &gt;= <span class="number">10</span> )&#123;</div><div class="line">      result -= <span class="number">10</span> ;</div><div class="line">      carry ++ ;</div><div class="line">    &#125;</div><div class="line">    c = c + result;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> ( carry !== <span class="number">0</span> )&#123;</div><div class="line">    c = c + <span class="string">'1'</span> ;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">while</span> ( c[c.length<span class="number">-1</span>] === <span class="string">'0'</span> )&#123;</div><div class="line">    c = c.slice(<span class="number">0</span>,c.length<span class="number">-1</span>) ;</div><div class="line">  &#125;</div><div class="line">  c = c.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>) ;</div><div class="line">  <span class="keyword">return</span> c ;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;題意&quot;&gt;&lt;a href=&quot;#題意&quot; class=&quot;headerlink&quot; title=&quot;題意&quot;&gt;&lt;/a&gt;題意&lt;/h1&gt;&lt;p&gt;大數相加。&lt;/p&gt;
    
    </summary>
    
      <category term="Online Judge" scheme="http://jeno5980515.github.io/categories/Online-Judge/"/>
    
      <category term="Codewars" scheme="http://jeno5980515.github.io/categories/Online-Judge/Codewars/"/>
    
    
      <category term="Codewars" scheme="http://jeno5980515.github.io/tags/Codewars/"/>
    
      <category term="4 kyu" scheme="http://jeno5980515.github.io/tags/4-kyu/"/>
    
  </entry>
  
</feed>
